implementation of queue using twos stack

var stack1 = [];
var stack2 = [];
function enqueue(ele){

	if(stack2.length>0){ 
		var len = stack2.length;
		for(var i=0;i<len ; i++){
			var p= stack2.pop()
			stack1.push(p);
		}
    }
	stack1.push(ele);
}
function dequeue(ele){

	if(stack2.length>0){
		stack2.pop();
        }
	else if(stack2.length===0){
		if(stack1.length===0){ 
			return "Queue is empty";
		}
		else if(stack1.length===1){ 
			return stack1.pop();
		}
         	else if(stack1.length>0){
			var len = stack1.length
			for(var i=0;i< len ; i++){
				var p= stack1.pop()
				stack2.push(p);
			}
			return stack2.pop();
		}


	}
}




fizz buzz problem


for (var i=1; i <= 20; i++)
{
    if (i % 15 == 0)
        console.log("FizzBuzz");
    else if (i % 3 == 0)
        console.log("Fizz");
    else if (i % 5 == 0)
        console.log("Buzz");
    else
        console.log(i);
}


anagram stringd


var str1=prompt();
var str2=prompt();
let l1=str1.length;
let l2=str2.length;
if(l1!=l2)
 return false;
let f1=str1.split('').sort().join('');
let f2=str2.split('').sort().join('');
if(f1===f2){
    console.log("true");
}
else console.log("false");


reverse word in a string

function reverseString(str) {

  
    let newString = "";
    for (let i = str.length - 1; i >= 0; i--) {
        newString += str[i];
    }
    return newString;
}


const string = prompt('Enter a string: ');

const result = reverseString(string);
console.log(result);


empty an array

var arraylist=['a', 'b', 'c', 'd', 'e', 'f'];
arraylist.splice(0,b.length);
alert(arraylist);